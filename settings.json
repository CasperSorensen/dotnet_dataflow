{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"Console.WriteLine(\"${1}\");",
			"$2"
		],
		"description": "Log output to console"
	},
	"New C# Class": {
		"prefix": "net:class",
		"body": [
			"namespace $WORKSPACE_NAME.${TM_DIRECTORY/^.+\\/(.*)$/$1/};",
			"",
			"public class $TM_FILENAME_BASE",
			"{",
			"\tpublic $TM_FILENAME_BASE()",
			"\t{",
			"\t",
			"\t}",
			"",
			"${2:}",
			"}"
		],
		"description": "New C# Class"
	},
	"New C# Interface": {
		"prefix": "net:interface",
		"body": [
			"namespace $WORKSPACE_NAME.${TM_DIRECTORY/^.+\\/(.*)$/$1/};",
			"",
			"public interface $TM_FILENAME_BASE",
			"{",
			"\t${2:}",
			"}",
		],
		"description": "New C# Class"
	},
	"New C# Method": {
		"prefix": "net:method",
		"body": [
			"\t/// <summary>",
			"\t/// ${1:Summary}",
			"\t/// </summary>",
			"\t/// <returns></returns>",
			"\t${2|public,private|} ${3:void} ${4:Name}()",
			"\t{",
			"\t\t${5:}",
			"\t\tthrow new NotImplementedException();",
			"\t}"
		],
		"description": "New C# Method"
	},
}
